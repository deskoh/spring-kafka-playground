spring:
  application:
    name: kafka-playground
  main:
    banner-mode: off
  threads:
    virtual:
      enabled: true
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    # Configurations for ConsumerFactory (ConsumerConfig)
    consumer:
      group-id: demo-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # Wraps real deserializer for handling bad data (see spring.deserializer.value.delegate.class)
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      # Disable auto-commit to allow manual acknowledgment
      enable-auto-commit: false
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        # spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.ParseStringDeserializer
        # Specify the static parser method using ParseStringDeserializer.VALUE_TYPE key if using ParseStringDeserializer
        spring.message.value.parser: com.example.kafka.service.MultiConsumer.parser
        # Fallback/default handling (not required if ParseStringDeserializer used)
        spring.json.value.default.type: java.lang.Object
        ### Following are useful for headers containing __typeId__ when JsonDeserializer is used ###
        spring.json.type.mapping: "greeting:com.example.kafka.model.Greeting, farewell:com.example.kafka.model.Farewell"
        # spring.json.trusted.packages: "*"
        # Uncomment following if using JsonDeserializer to trigger default.type fallback handling
        # spring.json.use.type.headers: false
    # Configurations for KafkaListenerContainerFactory
    listener:
      ack-mode: manual_immediate

server:
  port: "8080"
  servlet:
    context-path: /api
  error:
    include-message: always
    # include-stacktrace: never


logging:
  level:
    com.example.kafka.service: DEBUG